{
  "name": "openstack-image",
  "description": "Installs and configures the Glance Image Registry and Delivery Service",
  "long_description": "Description\n===========\n\nThis cookbook installs the OpenStack Image service **Glance** as part of an OpenStack reference deployment Chef for OpenStack. The http://github.com/mattray/chef-openstack-repo contains documentation for using this cookbook in the context of a full OpenStack deployment. Glance is installed from packages, optionally populating the repository with default images.\n\nhttp://glance.openstack.org/\n\nRequirements\n============\n\nChef 0.10.0 or higher required (for Chef environment use).\n\nCookbooks\n---------\n\nThe following cookbooks are dependencies:\n\n* openstack-common\n* openstack-identity\n\nUsage\n=====\n\napi\n------\n- Installs the glance-api server\n\nclient\n----\n- Install the glance client packages\n\nregistry\n--------\n- Installs the glance-registry server\n\nkeystone-registration\n---------------------\n- Registers the API endpoint and glance service Keystone user\n\nimage-upload\n------------\n- Upload image to glance. If you want to upload image during openstack installation, you need to add this recipe or the os-image role to the run list in a certain role and ensure before this recipe or the os-image role glance api and glance registry recipes have been executed.\n\nThe Glance cookbook currently supports file, swift, and Rackspace Cloud Files (swift API compliant) backing stores.  NOTE: changing the storage location from cloudfiles to swift (and vice versa) requires that you manually export and import your stored images.\n\nTo enable these features set the following in the default attributes section in your environment:\n\nFiles\n-----\n\n```json\n\"openstack\": {\n    \"image\": {\n        \"api\": {\n            \"default_store\": \"file\"\n        },\n        \"upload_images\": [\n            \"cirros\"\n        ]\n    }\n}\n```\n\nSwift\n-----\n\n```json\n\"openstack\": {\n    \"image\": {\n        \"api\": {\n            \"default_store\": \"swift\"\n        },\n        \"upload_images\": [\n            \"cirros\"\n        ]\n    }\n}\n```\n\nProviders\n=========\n\nimage\n-----\n\nAction: `:upload`\n\n- `:image_url`: Location of the image to be loaded into Glance.\n- `:image_name`: A name for the image.\n- `:image_type`: `unknown`, `qcow`, `ami`, `vhd`, `vmdk`, `vdi`, `iso`, `raw`. Defaults of `unknown` will use file extension '.gz', '.tgz' = ami, '.qcow2', '.img' = qcow.\n- `:identity_user`: Username of the Keystone admin user.\n- `:identity_pass`: Password for the Keystone admin user.\n- `:identity_tenant`: Name of the Keystone admin user's tenant.\n- `:identity_uri`: URI of the Identity API endpoint.\n\nFor testing this provider with ChefSpec, a custom matcher was added to `libraries/matchers.rb`.\n\nAttributes\n==========\n\nAttributes for the Image service are in the ['openstack']['image'] namespace.\n\n* `openstack['image']['verbose']` - Enables/disables verbose output for glance services.\n* `openstack['image']['debug']` - Enables/disables debug output for glance services.\n* `openstack['image']['identity_service_chef_role']` - The name of the Chef role that installs the Keystone Service API\n* `openstack['image']['user'] - User glance runs as\n* `openstack['image']['group'] - Group glance runs as\n* `openstack['image']['db']['username']` - Username for glance database access\n* `openstack['image']['api']['adminURL']` - Used when registering image endpoint with keystone\n* `openstack['image']['api']['internalURL']` - Used when registering image endpoint with keystone\n* `openstack['image']['api']['publicURL']` - Used when registering image endpoint with keystone\n* `openstack['image']['service_tenant_name']` - Tenant name used by glance when interacting with keystone - used in the API and registry paste.ini files\n* `openstack['image']['service_user']` - User name used by glance when interacting with keystone - used in the API and registry paste.ini files\n* `openstack['image']['service_role']` - User role used by glance when interacting with keystone - used in the API and registry paste.ini files\n* `openstack['image']['notification_driver']` - Notification driver, default noop.\n* `openstack['image']['filesystem_store_metadata_file']` - A path to a JSON file that contains metadata describing the storage system.\n* `openstack['image']['api']['workers']` - Set the number of glance api workers.\n* `openstack['image']['api']['show_image_direct_url']` - Allow glance to return URL referencing where data is stored on the backend. Default 'False'\n* `openstack['image']['api']['container_formats']` - Supported container formats for glance.\n* `openstack['image']['api']['disk_formats']` - Supported disk formats for glance.\n* `openstack['image']['api']['auth']['cache_dir']` - Defaults to `/var/cache/glance/api`. Directory where `auth_token` middleware writes certificates for glance-api\n* `openstack['image']['registry']['auth']['cache_dir']` - Defaults to `/var/cache/glance/registry`. Directory where `auth_token` middleware writes certificates for glance-registry\n* `openstack['image']['api']['auth']['memcached_servers']` - A list of memcached server(s) to use for caching\n* `openstack['image']['registry']['auth']['memcached_servers']` - A list of memcached server(s) to use for caching\n* `openstack['image']['api']['auth']['memcache_security_strategy']` - Whether token data should be authenticated or authenticated and encrypted. Acceptable values are MAC or ENCRYPT\n* `openstack['image']['registry']['auth']['memcache_security_strategy']` - Whether token data should be authenticated or authenticated and encrypted. Acceptable values are MAC or ENCRYPT\n* `openstack['image']['api']['auth']['memcache_secret_key']` - This string is used for key derivation\n* `openstack['image']['registry']['auth']['memcache_secret_key']` - This string is used for key derivation\n* `openstack['image']['api']['auth']['hash_algorithms']` - Hash algorithms to use for hashing PKI tokens\n* `openstack['image']['registry']['auth']['hash_algorithms']` - Hash algorithms to use for hashing PKI tokens\n* `openstack['image']['api']['auth']['cafile']` - A PEM encoded Certificate Authority to use when verifying HTTPs connections.\n* `openstack['image']['registry']['auth']['cafile']` - A PEM encoded Certificate Authority to use when verifying HTTPs connections\n* `openstack['image']['api']['auth']['insecure']` - Set whether to verify HTTPS connections\n* `openstack['image']['registry']['auth']['insecure']` - Set whether to verify HTTPS connections\n* `openstack['image']['upload_images']` - Default list of images to upload to the glance repository as part of the install\n* `openstack['image']['upload_image']['<imagename>']` - URL location of the `<imagename>` image. There can be multiple instances of this line to define multiple imagess (eg natty, maverick, fedora17 etc)\n--- example `openstack['image']['upload_image']['natty']` - \"http://c250663.r63.cf1.rackcdn.com/ubuntu-11.04-server-uec-amd64-multinic.tar.gz\"\n* `openstack['image']['api']['default_store']` - Toggles the backend storage type.  Currently supported is \"file\", \"swift\" and \"rbd\".\n* `openstack['image']['api']['stores']` - List of which store classes and store class locations are currently known to glance at startup\n* `openstack['image']['api']['block-storage']['cinder_catalog_info']` - Info to match when looking for cinder in the service catalog\n* `openstack['image']['api']['block-storage']['cinder_api_insecure']` - Allow to perform insecure SSL requests to cinder (boolean value)\n* `openstack['image']['api']['block-storage']['cinder_ca_certificates_file']` - Location of ca certicates file to use for cinder client requests\n* `openstack['image']['api']['swift']['store_container']` - Set the container used by glance to store images and snapshots.  Defaults to \"glance\"\n* `openstack['image']['api']['swift']['store_large_object_size']` - Set the size at which glance starts to chunnk files.  Defaults to \"200\" MB\n* `openstack['image']['api']['swift']['store_large_object_chunk_size']` - Set the chunk size for glance.  Defaults to \"200\" MB\n* `openstack['image']['api']['swift']['enable_snet']` - Set whether to use ServiceNET to communicate with the Swift Storage servers. (Rackspace specific option)\n* `openstack['image']['api']['swift']['store_region']` -  The region of the swift endpoint to be used for single tenant. This setting is only necessary if the tenant has multiple swift endpoints.\n* `openstack['image']['api']['rbd']['rbd_store_ceph_conf']` - Default location of ceph.conf\n* `openstack['image']['api']['rbd']['rbd_store_user']` - User for connecting to ceph store\n* `openstack['image']['api']['rbd']['rbd_store_pool']` - RADOS pool for images\n* `openstack['image']['api']['rbd']['rbd_store_chunk_size']` - Size in MB of chunks for RADOS Store, should be a power of 2\n* `openstack['image']['api']['rbd']['key_name']` - The data bag item name used for the Cephx key of the rbd_store_user.\n* `openstack['image']['cron']['redirection']` - Redirection of cron output\nTODO: Add DB2 support on other platforms\n\nSSL attributes\n---------------\n\nOnce SSL is enabled, endpoints attributes in Common need to updated to specify the https protocol.\n\n* `openstack['image']['ssl']['enabled']` - Enable SSL for Glance API and registry bind endpoints. Default is false.\n* `openstack['image']['ssl']['api']['enabled']` - Enable SSL for Glance API bind endpoint. Default is from ['image']['ssl']['enabled'].\n* `openstack['image']['ssl']['registry']['enabled']` - Enable SSL for Glance Registry bind endpoint. Default is from ['image']['ssl']['enabled'].\n* `openstack['image']['ssl']['basedir']` -  Base directory for SSL certficate and key file.\n* `openstack['image']['ssl']['cert_file']` - Path of the cert file for SSL.\n* `openstack['image']['ssl']['key_file']` - Path of the keyfile for SSL.\n* `openstack['image']['ssl']['cert_required']` - Client certificate required. Default is False.\n* `openstack['image']['ssl']['ca_file']` -  Path of the CA cert file\n\nVMWare attributes\n-----------------\n\n* `openstack['image']['api']['vmware']['secret_name']` - VMware databag secret name\n* `openstack['image']['api']['vmware']['vmware_server_host']` - ESX/ESXi or vCenter Server target system. e.g. 127.0.0.1, 127.0.0.1:443, www.vmware-infra.com\n* `openstack['image']['api']['vmware']['vmware_server_username']` - Server username (string value)\n* `openstack['image']['api']['vmware']['vmware_datacenter_path']` - Inventory path to a datacenter (string value)\n* `openstack['image']['api']['vmware']['vmware_datastore_name']` - Datastore associated with the datacenter (string value)\n* `openstack['image']['api']['vmware']['vmware_api_retry_count']` - The number of times we retry on failures (integer value)\n* `openstack['image']['api']['vmware']['vmware_task_poll_interval']` - The interval used for polling remote tasks invoked on VMware ESX/VC server in seconds (integer value)\n* `openstack['image']['api']['vmware']['vmware_store_image_dir']` - Absolute path of the folder containing the images in the datastore (string value)\n* `openstack['image']['api']['vmware']['vmware_api_insecure']` - Allow to perform insecure SSL requests to the target system (boolean value)\n\nMQ attributes\n-------------\n\n* `openstack['image']['mq']['service_type']` - Select qpid or rabbitmq. default rabbitmq\n* `openstack['image']['mq']['qpid']['host']` - The qpid host to use\n* `openstack['image']['mq']['qpid']['port']` - The qpid port to use\n* `openstack['image']['mq']['qpid']['qpid_hosts']` - Qpid hosts. TODO. use only when ha is specified.\n* `openstack['image']['mq']['qpid']['username']` - Username for qpid connection\n* `openstack['image']['mq']['qpid']['password']` - Password for qpid connection\n* `openstack['image']['mq']['qpid']['sasl_mechanisms']` - Space separated list of SASL mechanisms to use for auth\n* `openstack['image']['mq']['qpid']['reconnect_timeout']` - The number of seconds to wait before deciding that a reconnect attempt has failed.\n* `openstack['image']['mq']['qpid']['reconnect_limit']` - The limit for the number of times to reconnect before considering the connection to be failed.\n* `openstack['image']['mq']['qpid']['reconnect_interval_min']` - Minimum number of seconds between connection attempts.\n* `openstack['image']['mq']['qpid']['reconnect_interval_max']` - Maximum number of seconds between connection attempts.\n* `openstack['image']['mq']['qpid']['reconnect_interval']` - Equivalent to setting qpid_reconnect_interval_min and qpid_reconnect_interval_max to the same value.\n* `openstack['image']['mq']['qpid']['heartbeat']` - Seconds between heartbeat messages sent to ensure that the connection is still alive.\n* `openstack['image']['mq']['qpid']['protocol']` - Protocol to use. Default tcp.\n* `openstack['image']['mq']['qpid']['tcp_nodelay']` - Disable the Nagle algorithm. default disabled.\n\nMessaging Common attributes\n---------------------------\n\n* `openstack['image'][\"control_exchange\"]` - The AMQP exchange to connect to if using RabbitMQ or Qpid, defaults to openstack\n* `openstack['image']['rpc_backend']` - The messaging module to use\n* `openstack['image']['rpc_thread_pool_size']` - Size of RPC thread pool\n* `openstack['image']['rpc_conn_pool_size']` - Size of RPC connection pool\n* `openstack['image']['rpc_response_timeout']` - Seconds to wait for a response from call or multicall\n\nThe following attributes are defined in attributes/default.rb of the common cookbook, but are documented here due to their relevance:\n\n* `openstack['endpoints']['image-api-bind']['host']` - The IP address to bind the api service to\n* `openstack['endpoints']['image-api-bind']['port']` - The port to bind the api service to\n* `openstack['endpoints']['image-api-bind']['bind_interface']` - The interface name to bind the api service to\n\n* `openstack['endpoints']['image-registry-bind']['host']` - The IP address to bind the registry service to\n* `openstack['endpoints']['image-registry-bind']['port']` - The port to bind the registry service to\n* `openstack['endpoints']['image-registry-bind']['bind_interface']` - The interface name to bind the registry service to\n\nIf the value of the 'bind_interface' attribute is non-nil, then the image service will be bound to the first IP address on that interface.  If the value of the 'bind_interface' attribute is nil, then the image service will be bound to the IP address specified in the host attribute.\n\nTesting\n=====\n\nPlease refer to the [TESTING.md](TESTING.md) for instructions for testing the cookbook.\n\nBerkshelf\n=====\n\nBerks will resolve version requirements and dependencies on first run and\nstore these in Berksfile.lock. If new cookbooks become available you can run\n`berks update` to update the references in Berksfile.lock. Berksfile.lock will\nbe included in stable branches to provide a known good set of dependencies.\nBerksfile.lock will not be included in development branches to encourage\ndevelopment against the latest cookbooks.\n\nLicense and Author\n==================\n\nAuthor:: Justin Shepherd (<justin.shepherd@rackspace.com>)\nAuthor:: Jason Cannavale (<jason.cannavale@rackspace.com>)\nAuthor:: Ron Pedde (<ron.pedde@rackspace.com>)\nAuthor:: Joseph Breu (<joseph.breu@rackspace.com>)\nAuthor:: William Kelly (<william.kelly@rackspace.com>)\nAuthor:: Darren Birkett (<darren.birkett@rackspace.co.uk>)\nAuthor:: Evan Callicoat (<evan.callicoat@rackspace.com>)\nAuthor:: Matt Ray (<matt@opscode.com>)\nAuthor:: Jay Pipes (<jaypipes@att.com>)\nAuthor:: John Dewey (<jdewey@att.com>)\nAuthor:: Craig Tracey (<craigtracey@gmail.com>)\nAuthor:: Sean Gallagher (<sean.gallagher@att.com>)\nAuthor:: Mark Vanderwiel (<vanderwl@us.ibm.com>)\nAuthor:: Salman Baset (<sabaset@us.ibm.com>)\nAuthor:: Chen Zhiwei (zhiwchen@cn.ibm.com)\nAuthor:: Eric Zhou (zyouzhou@cn.ibm.com)\nAuthor:: Jian Hua Geng (gengjh@cn.ibm.com)\nAuthor:: Ionut Artarisi (iartarisi@suse.cz)\nAuthor:: Imtiaz Chowdhury (<imtiaz.chowdhury@workday.com>)\nAuthor:: Jan Klare (j.klare@x-ion.de)\n\nCopyright 2012, Rackspace US, Inc.\nCopyright 2012-2013, Opscode, Inc.\nCopyright 2012-2013, AT&T Services, Inc.\nCopyright 2013, Craig Tracey <craigtracey@gmail.com>\nCopyright 2013-2014, IBM Corp.\nCopyright 2014, SUSE Linux, GmbH.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "maintainer": "openstack-chef",
  "maintainer_email": "opscode-chef-openstack@googlegroups.com",
  "license": "Apache 2.0",
  "platforms": {
    "ubuntu": ">= 0.0.0",
    "fedora": ">= 0.0.0",
    "redhat": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "suse": ">= 0.0.0"
  },
  "dependencies": {
    "openstack-common": ">= 11.5.0",
    "openstack-identity": ">= 11.0.0",
    "ceph": "~> 0.8.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
    "openstack-image::api": "Installs packages required for a glance api server",
    "openstack-image::client": "Install packages required for glance client",
    "openstack-image::registry": "Installs packages required for a glance registry server",
    "openstack-image::identity_registration": "Registers Glance endpoints and service with Keystone",
    "openstack-image::image_upload": "Upload image using glance image-create command"
  },
  "version": "11.0.0",
  "source_url": "",
  "issues_url": ""
}