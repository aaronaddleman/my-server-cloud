{
  "name": "openstack-network",
  "description": "Installs and configures the OpenStack Network API Service and various agents and plugins",
  "long_description": "Description\n===========\n\nThis cookbook installs the **OpenStack Network** service (formerly project-named Quantum, current name is Neutron)\nas part of a Chef reference deployment of OpenStack.\n\nMore information about the OpenStack Network service is available\n[here](http://docs.openstack.org/trunk/openstack-network/admin/content/index.html)\n\nUsage\n=====\n\nOpenStack Network's design is modular, with plugins available that handle L2 and\nL3 networking for various hardware vendors and standards.\n\nRequirements\n============\n\nChef 11.4.4 or higher required (for Chef environment use)\n\nCookbooks\n---------\n\nThe following cookbooks are dependencies:\n\n* openstack-identity\n* openstack-common\n\nRecipes\n=======\n\nclient\n------\n\n- Install the network client packages\n\nserver\n------\n\n- Installs the openstack-network API server\n\ndhcp\\_agent\n--------\n\n- Installs the DHCP agent\n\nl3\\_agent\n--------\n\n- Installs the L3 agent and metadata agent\n\nvpn\\_agent\n--------\n\n- Installs the VPN agent\n\nIdentity-registration\n---------------------\n\n- Registers the OpenStack Network API endpoint and service user with Keystone\n\nAttributes\n==========\n\n* `openstack['network']['service_provider']` - Array of service providers (drivers) for advanced services like loadbalancer, VPN, Firewall.\n* `openstack['network']['api']['auth']['version']` - Select v2.0 or v3.0. Default v2.0. The auth API version used to interact with identity service.\n* `openstack['network'][\"misc_neutron\"]` - Array of strings to be added to neutron.conf\n* `openstack['network']['api']['auth']['memcached_servers']` - A list of memcached server(s) for caching\n* `openstack['network']['api']['auth']['memcache_security_strategy']` - Whether token data should be authenticated or authenticated and encrypted. Acceptable values are MAC or ENCRYPT.\n* `openstack['network']['api']['auth']['memcache_secret_key']` - This string is used for key derivation.\n* `openstack['network']['api']['auth']['hash_algorithms']` - Hash algorithms to use for hashing PKI tokens.\n* `openstack['network']['api']['auth']['cafile']` - A PEM encoded Certificate Authority to use when verifying HTTPs connections.\n* `openstack['network']['api']['auth']['insecure']` - Whether to allow the client to perform insecure SSL (https) requests.\n* `openstack['network']['dbsync_timeout']` - Set dbsync command timeout value\n\nTODO\n* `openstack[\"network\"][\"service_plugins\"]` - Array of Python classes to be used as `service_plugins` in neutron.conf (default: []). Set it to ['neutron.plugins.services.agent_loadbalancer.plugin.LoadBalancerPlugin'] to include the load balancer plugin.\n\nNeutron Nova interactions\n-------------------------\n* `openstack[\"network\"][\"nova\"][\"cafile\"]` - CA file for novaclient to verify server certificates\n* `openstack[\"network\"][\"nova\"][\"insecure\"]` - Boolean to control ignoring SSL errors on the nova url\n\nMQ attributes\n-------------\n* `openstack[\"network\"][\"mq\"][\"service_type\"]` - Select qpid or rabbitmq. default rabbitmq\nTODO: move rabbit parameters under openstack[\"network\"][\"mq\"]\n* `openstack[\"network\"][\"rabbit\"][\"username\"]` - Username for nova rabbit access\n* `openstack[\"network\"][\"rabbit\"][\"vhost\"]` - The rabbit vhost to use\n* `openstack[\"network\"][\"rabbit\"][\"port\"]` - The rabbit port to use\n* `openstack[\"network\"][\"rabbit\"][\"host\"]` - The rabbit host to use (must set when `openstack[\"network\"][\"rabbit\"][\"ha\"]` false).\n* `openstack[\"network\"][\"rabbit\"][\"ha\"]` - Whether or not to use rabbit ha\n\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"host\"]` - The qpid host to use\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"port\"]` - The qpid port to use\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"qpid_hosts\"]` - Qpid hosts. TODO. use only when ha is specified.\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"username\"]` - Username for qpid connection\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"password\"]` - Password for qpid connection\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"sasl_mechanisms\"]` - Space separated list of SASL mechanisms to use for auth\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"reconnect_timeout\"]` - The number of seconds to wait before deciding that a reconnect attempt has failed.\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"reconnect_limit\"]` - The limit for the number of times to reconnect before considering the connection to be failed.\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"reconnect_interval_min\"]` - Minimum number of seconds between connection attempts.\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"reconnect_interval_max\"]` - Maximum number of seconds between connection attempts.\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"reconnect_interval\"]` - Equivalent to setting qpid_reconnect_interval_min and qpid_reconnect_interval_max to the same value.\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"heartbeat\"]` - Seconds between heartbeat messages sent to ensure that the connection is still alive.\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"protocol\"]` - Protocol to use. Default tcp.\n* `openstack[\"network\"][\"mq\"][\"qpid\"][\"tcp_nodelay\"]` - Disable the Nagle algorithm. default disabled.\n\nLinuxbridge plugin attributes\n-----------------------------\n* `openstack['openstack']['network']['linuxbridge']['tenant_network_type']` - Type of network to allocate for tenant networks. (default 'local')\n* `openstack['openstack']['network']['linuxbridge']['network_vlan_ranges']` - Comma-separated list of <physical_network>[:<vlan_min>:<vlan_max>] tuples enumerating ranges of VLAN IDs\n* `openstack['openstack']['network']['linuxbridge']['physical_interface_mappings']` - (ListOpt) Comma-separated list of <physical_network>:<physical_interface> tuples mapping physical network names\n* `openstack['openstack']['network']['linuxbridge']['enable_vxlan']` - (BoolOpt) enable VXLAN on the agent. (default false)\n* `openstack['openstack']['network']['linuxbridge']['ttl']` - (IntOpt) use specific TTL for vxlan interface protocol packets\n* `openstack['openstack']['network']['linuxbridge']['tos']` - (IntOpt) use specific TOS for vxlan interface protocol packets\n* `openstack['openstack']['network']['linuxbridge']['vxlan_group']` - (StrOpt) multicast group to use for broadcast emulation. (default '224.0.0.1')\n* `openstack['openstack']['network']['linuxbridge']['l2_population']` - (BoolOpt) Flag to enable l2population extension. (default false)\n* `openstack['openstack']['network']['linuxbridge']['polling_interval']` - Agent polling interval in seconds. (default 2)\n* `openstack['openstack']['network']['linuxbridge']['rpc_support_old_agents']` - (BoolOpt) Enable server RPC compatibility with old (pre-havana). (default false)\n* `openstack['openstack']['network']['linuxbridge']['firewall_driver']` - Firewall driver for realizing neutron security group function\n\nModular Layer 2 Plugin Configuration\n------------------------------------\n* `openstack['openstack']['network']['ml2']['type_drivers']` - (ListOpt) List of network type driver entrypoints to be loaded from the neutron.ml2.type_drivers namespace.\n* `openstack['openstack']['network']['ml2']['tenant_network_types']` - (ListOpt) Ordered list of net work_types to allocate as tenant networks. (default local)\n* `openstack['openstack']['network']['ml2']['mechanism_drivers']` - (ListOpt) Ordered list of networ king mechanism driver entrypoints to be loaded from the neutron.ml2.mechanism_drivers namespace.\n* `openstack['openstack']['network']['ml2']['flat_networks']` - (ListOpt) List of physical_network names with which flat networks can be created.\n* `openstack['openstack']['network']['ml2']['network_vlan_ranges']` - (ListOpt) List of <physical_network>[:<vlan_min>:<vlan_max>] tuples specifying physical_network names usable for VLAN provider and tenant networks\n* `openstack['openstack']['network']['ml2']['tunnel_id_ranges']` - (ListOpt) Comma-separated list of <tun_min>:<tun_max> tuples enumerating ranges of GRE tunnel IDs that are available for tenant network allocation\n* `openstack['openstack']['network']['ml2']['vni_ranges']` - (ListOpt) Comma-separated list of <vni_min>:<vni_max> tuples enumerating ranges of VXLAN VNI IDs that are available for tenant network allocation.\n* `openstack['openstack']['network']['ml2']['vxlan_group']` - (StrOpt) Multicast group for the VXLAN interface.\n\nDHCP Agent Configuration\n------------------------\n* `openstack['openstack']['network']['dhcp']['dhcp_delete_namespaces']` - (StrOpt) If True, namespaces will be deleted when a dhcp server is disabled.\n* `openstack['openstack']['network']['dhcp']['dhcp_agents_per_network']` - (IntOpt) Set the number of dhcp agents for each network. (default 1)\n\nL3 Agent Configuration\n----------------------\n* `openstack['openstack']['network']['l3']['router_delete_namespaces']` - (StrOpt) If True, namespaces will be deleted when a router is destroyed.\n* `openstack['openstack']['network']['l3']['ha']['l3_ha']` - (BoolOpt) If True, virtual router will be created as ha by default. (default False)\n* `openstack['openstack']['network']['l3']['ha']['max_l3_agents_per_router']` - (IntOpt)  The maximum number of l3 agents for each ha router. (default 3)\n* `openstack['openstack']['network']['l3']['ha']['ha_vrrp_advert_int']` - (IntOpt) The advertisement interval in seconds. (default 2)\n* `openstack['openstack']['network']['l3']['router_distributed'] - Both true(bool) and 'true'(str) will set DVR(Distributed Virtual Router) configure enabled. Setting 'auto' will do a simple check then decide whether or not to enable DVR, default is enabled with OVS.\n* `openstack['openstack']['network']['l3']['router_delete_namespaces'] - (StrOpt) If True, namespaces will be deleted when a router is destroyed.\n\nVPN Agent Configuration\n----------------------\n* `openstack['openstack']['network']['enable_vpn'] - (BoolOpt) Used to enable VPN agent, if true, namespaces must be enabled. (default false)\n* `openstack['openstack']['network']['vpn']['vpn_device_driver'] - (ListOpt) Comma-separated list of VPN device drivers which VPN agent will use\n* `openstack['openstack']['network']['vpn']['ipsec_status_check_interval'] - (IntOpt) Status check interval for ipsec VPN\n\nLBaaS Agent Configuration\n----------------------\n* `openstack['openstack']['network']['lbaas']['custom_interface_driver']` - Custom plugin to support new interface drivers\n* `openstack['openstack']['network']['lbaas']['ovs_use_veth']` - (BoolOpt) Used to enable veth pairs for OVS based plugins\n\nThe following attributes are defined in attributes/default.rb of the common cookbook, but are documented here due to their relevance:\n\n* `openstack['endpoints']['network-api-bind']['host']` - The IP address to bind the api service to\n* `openstack['endpoints']['network-api-bind']['port']` - The port to bind the api service to\n* `openstack['endpoints']['network-api-bind']['bind_interface']` - The interface name to bind the api service to\n\nIf the value of the 'bind_interface' attribute is non-nil, then the network service will be bound to the first IP address on that interface.  If the value of the 'bind_interface' attribute is nil, then the network service will be bound to the IP address specified in the host attribute.\n\n\nTemplates\n=========\n* `neutron.conf.erb` - Config file for OpenStack Network server\n* `ml2_conf.ini.erb` - Configuration of Network ML2 Plugins\n* `vpn_agent.ini.erb` - Config file for Network VPN agent\n\nTesting\n=======\n\nPlease refer to the [TESTING.md](TESTING.md) for instructions for testing the cookbook.\n\nBerkshelf\n=====\n\nBerks will resolve version requirements and dependencies on first run and\nstore these in Berksfile.lock. If new cookbooks become available you can run\n`berks update` to update the references in Berksfile.lock. Berksfile.lock will\nbe included in stable branches to provide a known good set of dependencies.\nBerksfile.lock will not be included in development branches to encourage\ndevelopment against the latest cookbooks.\n\nLicense and Author\n==================\n\n|                      |                                                    |\n|:---------------------|:---------------------------------------------------|\n| **Authors**          |  Alan Meadows (<alan.meadows@gmail.com>)           |\n|                      |  Jay Pipes (<jaypipes@gmail.com>)                  |\n|                      |  Ionut Artarisi (<iartarisi@suse.cz>)              |\n|                      |  Salman Baset (<sabaset@us.ibm.com>)               |\n|                      |  Jian Hua Geng (<gengjh@cn.ibm.com>)               |\n|                      |  Chen Zhiwei (<zhiwchen@cn.ibm.com>)               |\n|                      |  Mark Vanderwiel(<vanderwl@us.ibm.com>)            |\n|                      |  Eric Zhou(<zyouzhou@cn.ibm.com>)                  |\n|                      |  Jan Klare (<j.klare@x-ion.de>)                    |\n|                      |                                                    |\n| **Copyright**        |  Copyright (c) 2013, AT&T Services, Inc.           |\n|                      |  Copyright (c) 2013-2014, SUSE Linux GmbH          |\n|                      |  Copyright (c) 2012, Rackspace US, Inc.            |\n|                      |  Copyright (c) 2013-2014, IBM Corp.                |\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "maintainer": "openstack-chef",
  "maintainer_email": "opscode-chef-openstack@googlegroups.com",
  "license": "Apache 2.0",
  "platforms": {
    "ubuntu": ">= 0.0.0",
    "fedora": ">= 0.0.0",
    "redhat": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "suse": ">= 0.0.0"
  },
  "dependencies": {
    "openstack-common": ">= 11.5.0",
    "openstack-identity": ">= 11.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
    "openstack-network::client": "Install packages required for network client",
    "openstack-network::server": "Installs packages required for a OpenStack Network server",
    "openstack-network::openvswitch": "Installs packages required for OVS",
    "openstack-network::metadata_agent": "Installs packages required for a OpenStack Network Metadata Agent",
    "openstack-network::identity_registration": "Registers OpenStack Network endpoints and service user with Keystone",
    "openstack-network::vpn_agent": "Installs packages required for Network VPN Agent"
  },
  "version": "11.0.0",
  "source_url": "",
  "issues_url": ""
}